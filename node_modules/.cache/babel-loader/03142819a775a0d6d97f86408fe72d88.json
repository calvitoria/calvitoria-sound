{"ast":null,"code":"var _jsxFileName = \"/home/vitoria/Documents/trybe/projetos/github calvitoria/calvitoria-sound/src/pages/Album.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './components/Header';\nimport getMusics from '../services/musicsAPI';\nimport MusicCard from './components/MusicCard';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI'; // import Loading from './components/Loading';\n\nimport LoadingImg from './components/LoadingImg';\nimport Footer from './components/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Album extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      loadingText: false,\n      listOfSongs: [],\n      artistName: '',\n      collectionName: '',\n      artworkUrl100: '',\n      favoriteSongsList: []\n    };\n\n    this.updateState = requestedSongs => {\n      this.setState({\n        artistName: requestedSongs[0].artistName,\n        collectionName: requestedSongs[0].collectionName,\n        artworkUrl100: requestedSongs[1].artworkUrl100\n      });\n    };\n\n    this.getListOfSongs = async () => {\n      const {\n        match: {\n          params: {\n            id\n          }\n        }\n      } = this.props;\n      const requestedSongs = await getMusics(id);\n      this.setState({\n        listOfSongs: requestedSongs\n      }, () => this.updateState(requestedSongs));\n    };\n\n    this.getListOfFavs = async () => {\n      this.setState({\n        loadingText: true\n      });\n      const favoritesSongs = await getFavoriteSongs();\n      this.setState({\n        loadingText: false,\n        favoriteSongsList: favoritesSongs\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getListOfSongs();\n    this.getListOfFavs();\n  } // seta estados\n\n\n  render() {\n    const {\n      listOfSongs,\n      artistName,\n      collectionName,\n      artworkUrl100,\n      loadingText,\n      favoriteSongsList\n    } = this.state;\n    if (loadingText) return /*#__PURE__*/_jsxDEV(LoadingImg, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 29\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-album\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"albumContainer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"albumInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"albumPic\",\n            alt: \"album cover\",\n            src: artworkUrl100\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            \"data-testid\": \"album-name\",\n            children: `${collectionName}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            \"data-testid\": \"artist-name\",\n            children: `By ${artistName}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"albumSongs\",\n          children: // função para 'printar' o nome das músicas na tela\n          listOfSongs.flatMap(song => song.kind === 'song' && /*#__PURE__*/_jsxDEV(MusicCard, {\n            song: song,\n            favList: favoriteSongsList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 16\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.string.isRequired\n  }).isRequired\n};\nexport default Album;","map":{"version":3,"sources":["/home/vitoria/Documents/trybe/projetos/github calvitoria/calvitoria-sound/src/pages/Album.js"],"names":["React","PropTypes","Header","getMusics","MusicCard","getFavoriteSongs","LoadingImg","Footer","Album","Component","state","loadingText","listOfSongs","artistName","collectionName","artworkUrl100","favoriteSongsList","updateState","requestedSongs","setState","getListOfSongs","match","params","id","props","getListOfFavs","favoritesSongs","componentDidMount","render","flatMap","song","kind","propTypes","shape","string","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './components/Header';\nimport getMusics from '../services/musicsAPI';\nimport MusicCard from './components/MusicCard';\nimport { getFavoriteSongs } from '../services/favoriteSongsAPI';\n// import Loading from './components/Loading';\nimport LoadingImg from './components/LoadingImg';\nimport Footer from './components/Footer';\n\nclass Album extends React.Component {\n  state = {\n    loadingText: false,\n    listOfSongs: [],\n    artistName: '',\n    collectionName: '',\n    artworkUrl100: '',\n    favoriteSongsList: [],\n  }\n\n  componentDidMount() {\n    this.getListOfSongs();\n    this.getListOfFavs();\n  }\n\n  // seta estados\n  updateState = (requestedSongs) => {\n    this.setState({ artistName: requestedSongs[0].artistName,\n      collectionName: requestedSongs[0].collectionName,\n      artworkUrl100: requestedSongs[1].artworkUrl100 });\n  }\n\n  // função para chamar as músicas do album com id X\n  getListOfSongs = async () => {\n    const { match: { params: { id } } } = this.props;\n    const requestedSongs = await getMusics(id);\n    this.setState({ listOfSongs: requestedSongs },\n      () => this.updateState(requestedSongs));\n  }\n\n  // função para recuperar a lista de favoritas\n  getListOfFavs = async () => {\n    this.setState({ loadingText: true });\n    const favoritesSongs = await getFavoriteSongs();\n    this.setState({ loadingText: false,\n      favoriteSongsList: favoritesSongs });\n  }\n\n  render() {\n    const { listOfSongs, artistName,\n      collectionName, artworkUrl100,\n      loadingText, favoriteSongsList } = this.state;\n    if (loadingText) return <LoadingImg />;\n    return (\n      <div data-testid=\"page-album\">\n        <Header />\n        <section className=\"albumContainer\">\n          <div className=\"albumInfo\">\n            <img className=\"albumPic\" alt=\"album cover\" src={ artworkUrl100 } />\n            <h3 data-testid=\"album-name\">{`${collectionName}`}</h3>\n            <p data-testid=\"artist-name\">{`By ${artistName}`}</p>\n          </div>\n          <div className=\"albumSongs\">\n            {\n            // função para 'printar' o nome das músicas na tela\n              listOfSongs.flatMap((song) => song.kind === 'song'\n            && <MusicCard song={ song } favList={ favoriteSongsList } />)\n            }\n          </div>\n        </section>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nAlbum.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Album;\n"]},"metadata":{},"sourceType":"module"}