{"ast":null,"code":"var _jsxFileName = \"/home/vitoria/Documents/trybe/projetos/github calvitoria/calvitoria-sound/src/pages/components/MusicCard.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, removeSong } from '../../services/favoriteSongsAPI';\nimport Loading from './Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MusicCard extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      loadingText: false,\n      isFavorite: false\n    };\n\n    this.markAsFav = () => {\n      const {\n        favList,\n        trackId\n      } = this.props;\n\n      if (favList.some(song => song.trackId === trackId)) {\n        this.setState({\n          isFavorite: true\n        });\n      }\n    };\n\n    this.addSongToFavorites = async () => {\n      const {\n        song\n      } = this.props;\n      this.setState({\n        loadingText: true\n      });\n      await addSong(song);\n      this.setState({\n        loadingText: false\n      });\n    };\n\n    this.removeSongFromFavorites = async () => {\n      this.setState({\n        loadingText: true\n      });\n      await removeSong(this.props);\n      this.setState({\n        loadingText: false\n      });\n    };\n\n    this.handleCheckbox = _ref => {\n      let {\n        target: {\n          checked\n        }\n      } = _ref;\n\n      if (checked === true) {\n        this.setState({\n          isFavorite: true\n        });\n        this.addSongToFavorites();\n      } else {\n        this.setState({\n          isFavorite: false\n        });\n        this.removeSongFromFavorites();\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.markAsFav();\n  } // função que checa se a música é marcada como favorita, para que essa informação seja mostrada mesmo depois de sair da pg\n\n\n  render() {\n    const {\n      song: {\n        trackName,\n        previewUrl,\n        trackId\n      }\n    } = this.props;\n    const {\n      loadingText,\n      isFavorite\n    } = this.state;\n    if (loadingText) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"songPreview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: trackName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        \"data-testid\": \"audio-component\",\n        src: previewUrl,\n        controls: true,\n        children: [/*#__PURE__*/_jsxDEV(\"track\", {\n          kind: \"captions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), \"O seu navegador n\\xE3o suporta o elemento\", ' ', /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"saveToFavs\",\n        children: [' ', /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"favoriteInput\",\n          children: [\"Save to your favorites:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"favoriteInput\",\n            \"data-testid\": `checkbox-music-${trackId}`,\n            type: \"checkbox\",\n            onChange: this.handleCheckbox,\n            checked: isFavorite\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nMusicCard.propTypes = {\n  trackName: PropTypes.string.isRequired,\n  previewUrl: PropTypes.string.isRequired,\n  song: PropTypes.shape({\n    artistName: PropTypes.string.isRequired,\n    collectionName: PropTypes.string.isRequired,\n    trackId: PropTypes.number.isRequired,\n    trackName: PropTypes.string.isRequired,\n    previewUrl: PropTypes.string.isRequired,\n    kind: PropTypes.string.isRequired\n  }).isRequired,\n  trackId: PropTypes.string.isRequired,\n  favList: PropTypes.shape({\n    some: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default MusicCard;","map":{"version":3,"sources":["/home/vitoria/Documents/trybe/projetos/github calvitoria/calvitoria-sound/src/pages/components/MusicCard.js"],"names":["React","PropTypes","addSong","removeSong","Loading","MusicCard","Component","state","loadingText","isFavorite","markAsFav","favList","trackId","props","some","song","setState","addSongToFavorites","removeSongFromFavorites","handleCheckbox","target","checked","componentDidMount","render","trackName","previewUrl","propTypes","string","isRequired","shape","artistName","collectionName","number","kind","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,iCAApC;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACxCC,KADwC,GAChC;AACNC,MAAAA,WAAW,EAAE,KADP;AAENC,MAAAA,UAAU,EAAE;AAFN,KADgC;;AAAA,SAWtCC,SAXsC,GAW1B,MAAM;AAChB,YAAM;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAAuB,KAAKC,KAAlC;;AACA,UAAIF,OAAO,CAACG,IAAR,CAAcC,IAAD,IAAUA,IAAI,CAACH,OAAL,KAAiBA,OAAxC,CAAJ,EAAsD;AACpD,aAAKI,QAAL,CAAc;AAAEP,UAAAA,UAAU,EAAE;AAAd,SAAd;AACD;AACF,KAhBqC;;AAAA,SAmBtCQ,kBAnBsC,GAmBjB,YAAY;AAC/B,YAAM;AAAEF,QAAAA;AAAF,UAAW,KAAKF,KAAtB;AACA,WAAKG,QAAL,CAAc;AAAER,QAAAA,WAAW,EAAE;AAAf,OAAd;AACA,YAAMN,OAAO,CAACa,IAAD,CAAb;AACA,WAAKC,QAAL,CAAc;AAAER,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD,KAxBqC;;AAAA,SA2BrCU,uBA3BqC,GA2BX,YAAY;AACpC,WAAKF,QAAL,CAAc;AAAER,QAAAA,WAAW,EAAE;AAAf,OAAd;AACA,YAAML,UAAU,CAAC,KAAKU,KAAN,CAAhB;AACA,WAAKG,QAAL,CAAc;AAAER,QAAAA,WAAW,EAAE;AAAf,OAAd;AACD,KA/BoC;;AAAA,SAiCtCW,cAjCsC,GAiCrB,QAA6B;AAAA,UAA5B;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAV,OAA4B;;AAC5C,UAAIA,OAAO,KAAK,IAAhB,EAAsB;AACpB,aAAKL,QAAL,CAAc;AAAEP,UAAAA,UAAU,EAAE;AAAd,SAAd;AACA,aAAKQ,kBAAL;AACD,OAHD,MAGO;AACL,aAAKD,QAAL,CAAc;AAAEP,UAAAA,UAAU,EAAE;AAAd,SAAd;AACA,aAAKS,uBAAL;AACD;AACF,KAzCqC;AAAA;;AAMxCI,EAAAA,iBAAiB,GAAG;AAClB,SAAKZ,SAAL;AACD,GARuC,CAUtC;;;AAiCAa,EAAAA,MAAM,GAAG;AACP,UAAM;AAAER,MAAAA,IAAI,EAAE;AAAES,QAAAA,SAAF;AAAaC,QAAAA,UAAb;AAAyBb,QAAAA;AAAzB;AAAR,QAA+C,KAAKC,KAA1D;AACA,UAAM;AAAEL,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAA8B,KAAKF,KAAzC;AACA,QAAIC,WAAJ,EAAiB,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACjB,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BAEE;AAAA,kBAAKgB;AAAL;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAO,uBAAY,iBAAnB;AAAqC,QAAA,GAAG,EAAGC,UAA3C;AAAwD,QAAA,QAAQ,MAAhE;AAAA,gCACE;AAAO,UAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADF,+CAGG,GAHH,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAUE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,mBACG,GADH,eAEE;AAAO,UAAA,OAAO,EAAC,eAAf;AAAA,6DAEE;AACE,YAAA,EAAE,EAAC,eADL;AAEE,2BAAe,kBAAiBb,OAAQ,EAF1C;AAGE,YAAA,IAAI,EAAC,UAHP;AAIE,YAAA,QAAQ,EAAG,KAAKO,cAJlB;AAKE,YAAA,OAAO,EAAGV;AALZ;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA0BD;;AAzEqC;;AA4ExCJ,SAAS,CAACqB,SAAV,GAAsB;AACpBF,EAAAA,SAAS,EAAEvB,SAAS,CAAC0B,MAAV,CAAiBC,UADR;AAEpBH,EAAAA,UAAU,EAAExB,SAAS,CAAC0B,MAAV,CAAiBC,UAFT;AAGpBb,EAAAA,IAAI,EAAEd,SAAS,CAAC4B,KAAV,CAAgB;AACpBC,IAAAA,UAAU,EAAE7B,SAAS,CAAC0B,MAAV,CAAiBC,UADT;AAEpBG,IAAAA,cAAc,EAAE9B,SAAS,CAAC0B,MAAV,CAAiBC,UAFb;AAGpBhB,IAAAA,OAAO,EAAEX,SAAS,CAAC+B,MAAV,CAAiBJ,UAHN;AAIpBJ,IAAAA,SAAS,EAAEvB,SAAS,CAAC0B,MAAV,CAAiBC,UAJR;AAKpBH,IAAAA,UAAU,EAAExB,SAAS,CAAC0B,MAAV,CAAiBC,UALT;AAMpBK,IAAAA,IAAI,EAAEhC,SAAS,CAAC0B,MAAV,CAAiBC;AANH,GAAhB,EAOHA,UAViB;AAWpBhB,EAAAA,OAAO,EAAEX,SAAS,CAAC0B,MAAV,CAAiBC,UAXN;AAYpBjB,EAAAA,OAAO,EAAEV,SAAS,CAAC4B,KAAV,CAAgB;AACvBf,IAAAA,IAAI,EAAEb,SAAS,CAACiC,IAAV,CAAeN;AADE,GAAhB,EAENA;AAdiB,CAAtB;AAiBA,eAAevB,SAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { addSong, removeSong } from '../../services/favoriteSongsAPI';\nimport Loading from './Loading';\n\nclass MusicCard extends React.Component {\nstate = {\n  loadingText: false,\n  isFavorite: false,\n}\n\ncomponentDidMount() {\n  this.markAsFav();\n}\n\n  // função que checa se a música é marcada como favorita, para que essa informação seja mostrada mesmo depois de sair da pg\n  markAsFav = () => {\n    const { favList, trackId } = this.props;\n    if (favList.some((song) => song.trackId === trackId)) {\n      this.setState({ isFavorite: true });\n    }\n  }\n\n  // função para adicionar a musica aos favoritos\n  addSongToFavorites = async () => {\n    const { song } = this.props;\n    this.setState({ loadingText: true });\n    await addSong(song);\n    this.setState({ loadingText: false });\n  }\n\n   // função para remover a musica dos favoritos\n   removeSongFromFavorites = async () => {\n     this.setState({ loadingText: true });\n     await removeSong(this.props);\n     this.setState({ loadingText: false });\n   }\n\n  handleCheckbox = ({ target: { checked } }) => {\n    if (checked === true) {\n      this.setState({ isFavorite: true });\n      this.addSongToFavorites();\n    } else {\n      this.setState({ isFavorite: false });\n      this.removeSongFromFavorites();\n    }\n  }\n\n  render() {\n    const { song: { trackName, previewUrl, trackId } } = this.props;\n    const { loadingText, isFavorite } = this.state;\n    if (loadingText) return <Loading />;\n    return (\n      <div className=\"songPreview\">\n        {/* <img alt=\"album cover\" src={ artworkUrl100 } /> */}\n        <h4>{trackName}</h4>\n        <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n          <track kind=\"captions\" />\n          O seu navegador não suporta o elemento\n          {' '}\n          <code>audio</code>\n          .\n        </audio>\n        <div className=\"saveToFavs\">\n          {' '}\n          <label htmlFor=\"favoriteInput\">\n            Save to your favorites:\n            <input\n              id=\"favoriteInput\"\n              data-testid={ `checkbox-music-${trackId}` }\n              type=\"checkbox\"\n              onChange={ this.handleCheckbox }\n              checked={ isFavorite }\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nMusicCard.propTypes = {\n  trackName: PropTypes.string.isRequired,\n  previewUrl: PropTypes.string.isRequired,\n  song: PropTypes.shape({\n    artistName: PropTypes.string.isRequired,\n    collectionName: PropTypes.string.isRequired,\n    trackId: PropTypes.number.isRequired,\n    trackName: PropTypes.string.isRequired,\n    previewUrl: PropTypes.string.isRequired,\n    kind: PropTypes.string.isRequired,\n  }).isRequired,\n  trackId: PropTypes.string.isRequired,\n  favList: PropTypes.shape({\n    some: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default MusicCard;\n"]},"metadata":{},"sourceType":"module"}