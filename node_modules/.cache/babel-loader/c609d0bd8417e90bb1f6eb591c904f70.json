{"ast":null,"code":"var _jsxFileName = \"/home/vitoria/Documents/trybe/projetos/sd-021-b-project-trybetunes/src/pages/Search.jsx\";\nimport React from 'react';\nimport Header from './components/Header';\nimport Loading from './components/Loading';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\nimport AlbumPreview from './components/AlbumPreview';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Search extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      searchField: '',\n      searchedArtist: '',\n      isSearchBtnDisabled: true,\n      loadingText: true,\n      returnedList: [],\n      isReturnEmpty: false\n    };\n\n    this.validateSearchBtn = () => {\n      const {\n        searchField\n      } = this.state;\n      const min = 2;\n\n      if (searchField.length >= min) {\n        this.setState({\n          isSearchBtnDisabled: false\n        });\n      } else {\n        this.setState({\n          isSearchBtnDisabled: true\n        });\n      }\n    };\n\n    this.handleChange = _ref => {\n      let {\n        target: {\n          value,\n          name\n        }\n      } = _ref;\n      this.setState({\n        [name]: value\n      }, this.validateSearchBtn);\n    };\n\n    this.onClickSearchBtn = async () => {\n      const {\n        searchField\n      } = this.state;\n      this.setState({\n        loadingText: false\n      });\n      const returnAPI = await searchAlbumsAPI(searchField);\n      console.log(returnAPI); // array de objetos\n\n      this.setState({\n        searchedArtist: returnAPI[0].artistName,\n        returnedList: returnAPI,\n        searchField: '',\n        loadingText: true\n      });\n    };\n\n    this.isReturnEmpty = () => {\n      const {\n        returnedList\n      } = this.state;\n\n      if (returnedList.length === 0) {\n        this.setState({\n          isReturnEmpty: true\n        });\n      } else this.setState({\n        isReturnEmpty: false\n      });\n    };\n  }\n\n  render() {\n    const {\n      isSearchBtnDisabled,\n      loadingText,\n      searchedArtist,\n      returnedList\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"page-search\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), loadingText ? /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"searchField\",\n          children: [\"Search\", /*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"searchField\",\n            onChange: this.handleChange,\n            id: \"searchField\",\n            type: \"text\",\n            \"data-testid\": \"search-artist-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: isSearchBtnDisabled,\n          onClick: this.onClickSearchBtn,\n          type: \"button\",\n          \"data-testid\": \"search-artist-button\",\n          children: \"Pesquisar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), isReturnEmpty, /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Resultado de \\xE1lbuns de:\", ' ', searchedArtist]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: returnedList.flatMap(obj => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(AlbumPreview, { ...obj\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["/home/vitoria/Documents/trybe/projetos/sd-021-b-project-trybetunes/src/pages/Search.jsx"],"names":["React","Header","Loading","searchAlbumsAPI","AlbumPreview","Search","Component","state","searchField","searchedArtist","isSearchBtnDisabled","loadingText","returnedList","isReturnEmpty","validateSearchBtn","min","length","setState","handleChange","target","value","name","onClickSearchBtn","returnAPI","console","log","artistName","render","flatMap","obj"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from './components/Header';\nimport Loading from './components/Loading';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\nimport AlbumPreview from './components/AlbumPreview';\n\nclass Search extends React.Component {\n  state = {\n    searchField: '',\n    searchedArtist: '',\n    isSearchBtnDisabled: true,\n    loadingText: true,\n    returnedList: [],\n    isReturnEmpty: false,\n  }\n\n  // função que valida se o botão deve ser habilitado ou não (2 ou mais caracteres)\n  validateSearchBtn = () => {\n    const { searchField } = this.state;\n    const min = 2;\n    if (searchField.length >= min) {\n      this.setState({ isSearchBtnDisabled: false });\n    } else {\n      this.setState({ isSearchBtnDisabled: true });\n    }\n  }\n\n  // função para atualizar o estado a medida que o input de search muda.\n  handleChange = ({ target: { value, name } }) => {\n    this.setState({ [name]: value }, this.validateSearchBtn);\n  }\n\n// função onclick para fazer a requisição e limpar input\nonClickSearchBtn = async () => {\n  const { searchField } = this.state;\n  this.setState({ loadingText: false });\n  const returnAPI = await searchAlbumsAPI(searchField);\n  console.log(returnAPI); // array de objetos\n  this.setState({ searchedArtist: returnAPI[0].artistName,\n    returnedList: returnAPI,\n    searchField: '',\n    loadingText: true });\n}\n\n// função que verifica se array retornado da api é vazio\nisReturnEmpty = () => {\n  const { returnedList } = this.state;\n  if (returnedList.length === 0) {\n    this.setState({ isReturnEmpty: true });\n  } else this.setState({ isReturnEmpty: false });\n}\n\nrender() {\n  const { isSearchBtnDisabled, loadingText, searchedArtist, returnedList } = this.state;\n  return (\n    <div data-testid=\"page-search\">\n      <Header />\n      {\n        loadingText ? (\n          <form>\n            <label htmlFor=\"searchField\">\n              Search\n              <input\n                name=\"searchField\"\n                onChange={ this.handleChange }\n                id=\"searchField\"\n                type=\"text\"\n                data-testid=\"search-artist-input\"\n              />\n            </label>\n            <button\n              disabled={ isSearchBtnDisabled }\n              onClick={ this.onClickSearchBtn }\n              type=\"button\"\n              data-testid=\"search-artist-button\"\n            >\n              Pesquisar\n            </button>\n          </form>\n        ) : <Loading />\n      }\n      {\n        isReturnEmpty\n      }\n      <h4>\n        Resultado de álbuns de:\n        {' '}\n        { searchedArtist }\n      </h4>\n      <ol>\n        {\n          returnedList.flatMap((obj) => (\n            <li>\n              <AlbumPreview { ... obj } />\n            </li>\n          ))\n        }\n      </ol>\n    </div>\n  );\n}\n}\n\nexport default Search;\n"]},"metadata":{},"sourceType":"module"}